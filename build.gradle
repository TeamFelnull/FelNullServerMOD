buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
plugins {
    id "com.github.johnrengelman.shadow" version "4.0.4"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = '2022SP-1.0'
group = 'dev.felnull'
archivesBaseName = 'FelNullServerMOD-1.16.5'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                felnullservermod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                felnullservermod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'felnullservermod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                felnullservermod {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }
repositories {
    maven {
        name = "FelNull"
        url = "https://maven.felnull.dev/"
    }
}
configurations {
    shadowIn
    implementation.extendsFrom(shadowIn)
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.20'

    implementation 'dev.felnull:katyouvotifier:3.0.0-SNAPSHOT-1.0'

    shadowIn files("libs/IkenaiNBSLibrary-1.0.jar")
    shadowIn 'dev.felnull:felnull-java-library:1.39'
}
ext.themanifest = {
    attributes([
            "Specification-Title"     : "katyouvotifier",
            "Specification-Vendor"    : "MORIMORI0317",
            "Specification-Version"   : "1",
            "Implementation-Title"    : project.name,
            "Implementation-Version"  : "${version}",
            "Implementation-Vendor"   : "TeamFelNull",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
}

shadowJar {
    configurations = [project.configurations.shadowIn]
    classifier ''
    relocate 'red.felnull.ikenainbs', 'dev.felnull.fnsm.libs.red.felnull.ikenainbs'
    relocate 'dev.felnull.fnjl', 'dev.felnull.fnsm.libs.dev.felnull.fnjl'
}

afterEvaluate {
    reobf {
        shadowJar { mappings = tasks.reobfJar.mappings }
    }
}

jar {
    manifest themanifest
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
    manifest themanifest
}
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
    manifest themanifest
}
artifacts {
    archives devJar
    archives sourceJar
}
jar.finalizedBy('reobfJar')